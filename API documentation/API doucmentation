{
	"info": {
		"_postman_id": "7c6978bf-438d-48a5-83fd-081e3c2b4a60",
		"name": "TimeTable_management_system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25651207"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"     pm.expect(pm.response.json()).to.be.an('object');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"akiwlk\",\r\n    \"password\" : \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\" : \"Test3\",\r\n    \"lastName\" : \"Wijesundara\",\r\n    \"nic\" : \"12131414556677\",\r\n    \"contact\" : 7713094234,\r\n    \"role\" : \"faculty\",\r\n    \"userName\" : \"test3\",\r\n    \"password\" : \"root\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Time Table",
			"item": [
				{
					"name": "CreateTimeTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"course\" : \"65f9e649451e652346c1b2eb\",\r\n    \"timeTableData\" : {\r\n        \"monday\" : [\"65fde86660a9ade35b61b1ba\",\"65fde8dd60a9ade35b61b1bd\"],\r\n        \"teuseday\" : [\"65fde90c60a9ade35b61b1c0\"]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/timeTable/createTimeTable",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"timeTable",
								"createTimeTable"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateTimeTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 20\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"timeTableData\" : {\r\n        \"monday\" : [\"65fde86660a9ade35b61b1ba\",\"65fde8dd60a9ade35b61b1bd\"],\r\n        \"teuseday\" : [\"65fde90c60a9ade35b61b1c0\"],\r\n        \"friday\" : [\"65fdec1a2064e63e357e4fc5\"]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/timeTable/updateTimeTable/65fdeb8e2064e63e357e4fc2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"timeTable",
								"updateTimeTable",
								"65fdeb8e2064e63e357e4fc2"
							]
						}
					},
					"response": []
				},
				{
					"name": "ViewTimeTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400 in case of error\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains Time table\", function () {\r",
									"    pm.expect(JSON);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjg3YTNlNjZlNGNmM2Q3NWY1MGViNCIsImlhdCI6MTcxMTE3MzUxNiwiZXhwIjoxNzEzNzY1NTE2fQ.CeWhXOhXdS-n2zaQZWOSQGbAlWhyiFhOzamSYNETlkk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/timeTable/viewTimeTable/65f9e649451e652346c1b2eb",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"timeTable",
								"viewTimeTable",
								"65f9e649451e652346c1b2eb"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Faculty",
			"item": [
				{
					"name": "CreateFaculty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"facultyName\" : \"Faculty of humanities\",\r\n    \"userName\" : \"nadee\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/faculty/createFaculty",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"faculty",
								"createFaculty"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Course",
			"item": [
				{
					"name": "CreateCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"courseName\" : \"Test course Name\",\r\n    \"code\" : \"SE3000\",\r\n    \"description\" : \"This course gives and introduction for Test\",\r\n    \"credits\" : 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/course/createCourse",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"course",
								"createCourse"
							]
						}
					},
					"response": []
				},
				{
					"name": "AssignFaculty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"faculty\" : \"65f8a0dd34ae55940bc97989\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/course/assignFaculty/65ffe25b4a5656bfb12527ee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"course",
								"assignFaculty",
								"65ffe25b4a5656bfb12527ee"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCourseyFaculty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"faculty\" : \"Faculty of Computing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/course/getCourseByFaculty",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"course",
								"getCourseByFaculty"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllCourses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjg3YTNlNjZlNGNmM2Q3NWY1MGViNCIsImlhdCI6MTcxMTE3MzUxNiwiZXhwIjoxNzEzNzY1NTE2fQ.CeWhXOhXdS-n2zaQZWOSQGbAlWhyiFhOzamSYNETlkk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/course/getCourses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"course",
								"getCourses"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentCourseName\" : \"Application Frameworks\",\r\n    \"currentCode\" : \"SE3040\",\r\n    \"courseName\" : \"Application Frameworks\",\r\n    \"code\" : \"SE3040\",\r\n    \"description\" : \"This course gives and introduction for Application Frameworks\",\r\n    \"credits\" : 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/course/updateCourse/65f8ae200f927530ab1431c0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"course",
								"updateCourse",
								"65f8ae200f927530ab1431c0"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/course/deleteCourse/65f9d0035fee28ecd6b882ea",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"course",
								"deleteCourse",
								"65f9d0035fee28ecd6b882ea"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Session",
			"item": [
				{
					"name": "CreateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"course\" : \"65f9e649451e652346c1b2eb\",\r\n    \"sessionName\" : \"Software Architecture lecuter 2\",\r\n    \"time\" : 10.30,\r\n    \"duration\" : 2,\r\n    \"faculty\" : \"65f8a0dd34ae55940bc97989\",\r\n    \"location\" : \"65fb2d2453579c65a586f0d8\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/session/createSession",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"session",
								"createSession"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"course\" : \"65f9e649451e652346c1b2eb\",\r\n    \"sessionName\" : \"Software Architecture Tute\",\r\n    \"time\" : 10.30,\r\n    \"duration\" : 1,\r\n    \"faculty\" : \"65f8a0dd34ae55940bc97989\",\r\n    \"location\" : \"65fb2d2f53579c65a586f0dc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/session/updateSession/65fde90c60a9ade35b61b1c0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"session",
								"updateSession",
								"65fde90c60a9ade35b61b1c0"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/session/deleteSession/65fc8acbe06872a801887077",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"session",
								"deleteSession",
								"65fc8acbe06872a801887077"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "CreateLocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"locationName\" : \"A405\",\r\n    \"capacity\" : 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/location/createLocation",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"location",
								"createLocation"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Enroll",
			"item": [
				{
					"name": "EnrollStudent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjg3YTNlNjZlNGNmM2Q3NWY1MGViNCIsImlhdCI6MTcxMTE0MTQ3OSwiZXhwIjoxNzEzNzMzNDc5fQ.iK9hp2HdpGdZvVJtDyzlubrwWKyW2h_kuyQbMg1UTAU",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"course\" : \"65f9e649451e652346c1b2eb\",\r\n    \"student\" : \"65f87a3e66e4cf3d75f50eb4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/enroll/enrollStudent",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"enroll",
								"enrollStudent"
							]
						}
					},
					"response": []
				},
				{
					"name": "ManageEnrollments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMTE2ODMyMCwiZXhwIjoxNzEzNzYwMzIwfQ.yskDAMj3U6OkHTBHmIRENVkqEoNDTpxF5Mk2hAhbBVw",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\" : \"Approved\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/enroll/manageEnrollments/65fdf28d7a6ff05acaa9cb96",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"enroll",
								"manageEnrollments",
								"65fdf28d7a6ff05acaa9cb96"
							]
						}
					},
					"response": []
				},
				{
					"name": "ViewEnrollments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(JSON)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMTE2ODMyMCwiZXhwIjoxNzEzNzYwMzIwfQ.yskDAMj3U6OkHTBHmIRENVkqEoNDTpxF5Mk2hAhbBVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/enroll/viewEnrollments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"enroll",
								"viewEnrollments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Resource",
			"item": [
				{
					"name": "CreateResource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceName\" : \"Screen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/resource/createResource",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"resource",
								"createResource"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Room",
			"item": [
				{
					"name": "CreateRoom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"roomNo\" : \"A402\",\r\n    \"type\" : \"LAB\",\r\n    \"capacity\" : 60,\r\n    \"resources\" : [\"65fca566ff7dfb6bf2932a74\",\"65fca582ff7dfb6bf2932a78\",\"65fca58eff7dfb6bf2932a7c\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/room/createRoom",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"room",
								"createRoom"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "CreateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"roomNo\" : \"65fcabb99334eb40f6318681\",\r\n    \"event\" : \"SA lecuter\",\r\n    \"startTime\" : \"2023-04-22T15:00:00.000Z\",\r\n    \"duration\" : 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/booking/createBooking",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"booking",
								"createBooking"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Specialization",
			"item": [
				{
					"name": "CreateSpecialization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Response contains success message\", function () {\r",
									"    pm.expect(String)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDg3MDA4OCwiZXhwIjoxNzEzNDYyMDg4fQ.xo7xC9rkw77AGlZIOKKka48MVI1HY8wUElVCuUMy7MY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"specializationName\" : \"Software Engineering\",\r\n    \"faculty\" : \"65f8a0dd34ae55940bc97989\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/specialization/createSpecialization",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"specialization",
								"createSpecialization"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Zjc2MzE0MzIyMzI5ODc0Yjc2ZmQ4NSIsImlhdCI6MTcxMDc4ODY4MCwiZXhwIjoxNzEzMzgwNjgwfQ.W-sR5_WRoRZWee9jFdxWvDivnrlBTiACwPYoI3KIBYA",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/user/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}